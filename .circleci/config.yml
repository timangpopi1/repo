version: 2
jobs:
  build:
   docker:
      - image: ubuntu:18.04
   steps:
      - run:
          command: |
           apt-get -y update && apt-get -y upgrade && apt-get -y install bc bison ca-certificates curl flex gcc \
           git libc6-dev libssl-dev make openssl python ssh wget zip >> ubuntu.log
           msm_test=0
           export my_project="https://github.com/greenforce-project"
           ##---------------------------&&---------------------------##
           if [[ ${msm_test} == 1 ]] ; then
               export target_branch="lineage-17.1"
               export target_repo="kernel_xiaomi_rova_sd425"
               git clone --quiet --depth=1 ${my_project}/${target_repo} -b ${target_branch} kernel && cd kernel
               wget https://github.com/timangpopi1/repo/raw/master/build.sh
               ##---------------------------&&---------------------------##
               export codename="rolex"
               export defconfig="rolex_defconfig"
               chmod +x build.sh && bash ./build.sh $defconfig gcc
               ##---------------------------&&---------------------------##
               unset codename
               export codename="riva"
               unset defconfig
               export defconfig="riva_defconfig"
               chmod +x build.sh && bash ./build.sh $defconfig gcc
               ##---------------------------&&---------------------------##
           else
               export target_branch="lineage-17.1"
               export target_repo="kernel_xiaomi_whyred_sdm660"
               git clone --quiet --depth=1 ${my_project}/${target_repo} -b ${target_branch} kernel && cd kernel
               wget https://github.com/timangpopi1/repo/raw/master/build.sh
               wget https://github.com/greenforce-project/kernel_xiaomi_whyred_sdm660/raw/46b529bd25a6b9ae3d1d82a44c6f8fb96948b3d9/oc.patch
               git apply ./80mv_uv.patch && git apply ./oc.patch
               ##---------------------------&&---------------------------##
               export codename="whyred-(oldcam)"
               export defconfig="whyred_defconfig"
               chmod +x build.sh && bash ./build.sh $defconfig gcc
               ##---------------------------&&---------------------------##
               git apply ./campatch.patch
               unset codename
               export codename="whyred-(newcam)"
               unset defconfig
               export defconfig="whyred_defconfig"
               chmod +x build.sh && bash ./build.sh $defconfig gcc
               ##---------------------------&&---------------------------##
           fi
